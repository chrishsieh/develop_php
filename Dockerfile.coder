FROM php:fpm

RUN set -x \
    && curl -sL https://deb.nodesource.com/setup_8.x | bash -\
    && apt-get update \
    && apt-get install -y \
        libxkbfile-dev \
        libsecret-1-dev \
        nodejs git

RUN npm install -g yarn@1.13

RUN set -x \
    && cd /usr/src \
    && coderlatest=$(curl -s https://api.github.com/repos/codercom/code-server/releases/latest | grep "tarball_url" | cut -d '"' -f 4) \
    && curl -Lo coder.tar.gz $coderlatest \
    && tar zxf coder.tar.gz \
    && coderversion=$(curl -s https://api.github.com/repos/codercom/code-server/releases/latest | grep "target_commitish" | cut -d '"' -f 4 | cut -c 1-7) \
    && coderfolder="codercom-code-server-${coderversion}" \
    && mv $coderfolder coder \
    && cd coder

WORKDIR /usr/src/coder

RUN yarn && NODE_ENV=production yarn task build:server:binary

FROM php:fpm

ENV BUILD_DEPS \
    cmake \
    libicu-dev \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev libzip-dev

ENV RUN_DEPS \
    openssl net-tools sudo dumb-init bsdtar \
    gettext jq zip git unzip \
    locales locales-all wget curl \
    libfreetype6 libjpeg62-turbo libpng16-16 \
    libzip4 \
    ruby-full \
    nodejs \
    mysql-client \
    ca-certificates

RUN set -x \
# ---- Installing Build dependencies ----
    && DEBIAN_FRONTEND=noninteractive apt-get update -qq \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils ca-certificates \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests ${BUILD_DEPS} \
# ---- Installing PHP Extension: gd ----
    && /usr/local/bin/docker-php-ext-configure gd --with-gd --with-png-dir=/usr --with-zlib-dir=/usr --with-jpeg-dir=/usr --with-freetype-dir=/usr --enable-gd-jis-conv \
    && NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \
    && docker-php-ext-install -j${NPROC} \
        gettext mysqli pdo_mysql exif gd zip \
    && (rm -rf /usr/local/lib/php/test/gd || true) \
    && (rm -rf /usr/local/lib/php/doc/gd || true) \
# ---- Removing Build dependencies ----
    && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ${BUILD_DEPS} \
# ---- Installing Running dependencies ----
    && curl -sL https://deb.nodesource.com/setup_8.x | bash -\
    && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests ${RUN_DEPS} \
    && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \
    && rm -rf /var/lib/apt/lists/* \
    && update-ca-certificates \
# ---- Installing Running env ----
    && npm i npm@latest -g \
    && npm install -g grunt-cli webpack-cli \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && composer self-update \
    && gem install sass -v 3.4.25 \
# ---- Add user ----
    && adduser --gecos '' --disabled-password coder \
    && echo "coder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

ENV VSCODE_EXTENSIONS "/home/coder/.local/share/code-server/extensions"

USER coder

RUN mkdir -p /home/coder/project \
    && chmod g+rw /home/coder/project \
    && composer global require hirak/prestissimo

WORKDIR /home/coder/project

VOLUME [ "/home/coder/project" ]

COPY --from=0 /usr/src/coder/packages/server/cli-linux-x64 /usr/local/bin/code-server

EXPOSE 8443

ENTRYPOINT ["dumb-init", "code-server"]